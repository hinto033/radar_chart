mLegLmi = data.matrix(lmsAge[15])
sLegLmi = data.matrix(lmsAge[16])
lTrunkFmi = data.matrix(lmsAge[18])
mTrunkFmi = data.matrix(lmsAge[19])
sTrunkFmi = data.matrix(lmsAge[20])
lTrunkLmi = data.matrix(lmsAge[22])
mTrunkLmi = data.matrix(lmsAge[23])
sTrunkLmi = data.matrix(lmsAge[24])
zScore1 <- transform(zScore,
zLArmFmi= (((leftArmFmi/mArmFmi)^lArmFmi)-1)/(lArmFmi*sArmFmi),
zRArmFmi= (((rightArmFmi/mArmFmi)^lArmFmi)-1)/(lArmFmi*sArmFmi),
zLArmLmi= (((leftArmLmi/mArmLmi)^lArmLmi)-1)/(lArmLmi*sArmLmi),
zRArmLmi= (((rightArmLmi/mArmLmi)^lArmLmi)-1)/(lArmLmi*sArmLmi),
zTrunkLmi= (((trunkLmi/mTrunkLmi)^lTrunkLmi)-1)/(lTrunkLmi*sTrunkLmi),
zLLegFmi= (((leftLegFmi/mLegFmi)^lLegFmi)-1)/(lLegFmi*sLegFmi),
zRLegFmi= (((rightLegFmi/mLegFmi)^lLegFmi)-1)/(lLegFmi*sLegFmi),
zLLegLmi= (((leftLegLmi/mLegLmi)^lLegLmi)-1)/(lLegLmi*sLegLmi),
zRLegLmi= (((rightLegLmi/mLegLmi)^lLegLmi)-1)/(lLegLmi*sLegLmi),
zTrunkLmi= (((trunkLmi/mTrunkLmi)^lTrunkLmi)-1)/(lTrunkLmi*sTrunkLmi))
zScore4 <- transform(zScore3,
zAvgFmi= (ZFTrunkFmi+zLArmFmi+zRArmFmi+zLLegFmi+zRLegFmi) / 5,
zAvgLmi= (ZFTrunkLmi+zLArmLmi+zRArmLmi+zLLegLmi+zRLegLmi) / 5,
ZSDFMI = sd(c(zLArmFmi, zRArmFmi,zLLegFmi,zRLegFmi, zTrunkFmi)),
ZSDLMI = sd(c(zLArmLmi, zRArmLmi,zLLegLmi,zRLegLmi, zTrunkLmi))
)
zScore2 <- transform(zScore1,
zAvgFmi= (ZFTrunkFmi+zLArmFmi+zRArmFmi+zLLegFmi+zRLegFmi) / 5,
zAvgLmi= (ZFTrunkLmi+zLArmLmi+zRArmLmi+zLLegLmi+zRLegLmi) / 5,
ZSDFMI = sd(c(zLArmFmi, zRArmFmi,zLLegFmi,zRLegFmi, zTrunkFmi)),
ZSDLMI = sd(c(zLArmLmi, zRArmLmi,zLLegLmi,zRLegLmi, zTrunkLmi))
)
zScore2 <- transform(zScore1,
zAvgFmi= (zTrunkFmi+zLArmFmi+zRArmFmi+zLLegFmi+zRLegFmi) / 5,
zAvgLmi= (zTrunkLmi+zLArmLmi+zRArmLmi+zLLegLmi+zRLegLmi) / 5,
ZSDFMI = sd(c(zLArmFmi, zRArmFmi,zLLegFmi,zRLegFmi, zTrunkFmi)),
ZSDLMI = sd(c(zLArmLmi, zRArmLmi,zLLegLmi,zRLegLmi, zTrunkLmi))
)
zScore1 <- transform(zScore,
zLArmFmi= (((leftArmFmi/mArmFmi)^lArmFmi)-1)/(lArmFmi*sArmFmi),
zRArmFmi= (((rightArmFmi/mArmFmi)^lArmFmi)-1)/(lArmFmi*sArmFmi),
zLArmLmi= (((leftArmLmi/mArmLmi)^lArmLmi)-1)/(lArmLmi*sArmLmi),
zRArmLmi= (((rightArmLmi/mArmLmi)^lArmLmi)-1)/(lArmLmi*sArmLmi),
zLLegFmi= (((leftLegFmi/mLegFmi)^lLegFmi)-1)/(lLegFmi*sLegFmi),
zRLegFmi= (((rightLegFmi/mLegFmi)^lLegFmi)-1)/(lLegFmi*sLegFmi),
zLLegLmi= (((leftLegLmi/mLegLmi)^lLegLmi)-1)/(lLegLmi*sLegLmi),
zRLegLmi= (((rightLegLmi/mLegLmi)^lLegLmi)-1)/(lLegLmi*sLegLmi),
zTrunkFmi= (((trunkFmi/mTrunkFmi)^lTrunkFmi)-1)/(lTrunkFmi*sTrunkFmi),
zTrunkLmi= (((trunkLmi/mTrunkLmi)^lTrunkLmi)-1)/(lTrunkLmi*sTrunkLmi))
zScore2 <- transform(zScore1,
zAvgFmi= (zTrunkFmi+zLArmFmi+zRArmFmi+zLLegFmi+zRLegFmi) / 5,
zAvgLmi= (zTrunkLmi+zLArmLmi+zRArmLmi+zLLegLmi+zRLegLmi) / 5,
ZSDFMI = sd(c(zLArmFmi, zRArmFmi,zLLegFmi,zRLegFmi, zTrunkFmi)),
ZSDLMI = sd(c(zLArmLmi, zRArmLmi,zLLegLmi,zRLegLmi, zTrunkLmi))
)
zScore1 <- data.frame(transform(zScore,
zLArmFmi= (((leftArmFmi/mArmFmi)^lArmFmi)-1)/(lArmFmi*sArmFmi),
zRArmFmi= (((rightArmFmi/mArmFmi)^lArmFmi)-1)/(lArmFmi*sArmFmi),
zLArmLmi= (((leftArmLmi/mArmLmi)^lArmLmi)-1)/(lArmLmi*sArmLmi),
zRArmLmi= (((rightArmLmi/mArmLmi)^lArmLmi)-1)/(lArmLmi*sArmLmi),
zLLegFmi= (((leftLegFmi/mLegFmi)^lLegFmi)-1)/(lLegFmi*sLegFmi),
zRLegFmi= (((rightLegFmi/mLegFmi)^lLegFmi)-1)/(lLegFmi*sLegFmi),
zLLegLmi= (((leftLegLmi/mLegLmi)^lLegLmi)-1)/(lLegLmi*sLegLmi),
zRLegLmi= (((rightLegLmi/mLegLmi)^lLegLmi)-1)/(lLegLmi*sLegLmi),
zTrunkFmi= (((trunkFmi/mTrunkFmi)^lTrunkFmi)-1)/(lTrunkFmi*sTrunkFmi),
zTrunkLmi= (((trunkLmi/mTrunkLmi)^lTrunkLmi)-1)/(lTrunkLmi*sTrunkLmi)))
colnames(zScore1)[c('M', 'M.1', 'M.2', 'M.3', 'M.4', 'M.5', 'M.6',  'M.7', 'M.8', 'M.9')] <-
c('zLArmFmi', 'zRArmFmi', 'zLArmLmi', 'zRArmLmi', 'zLLegFmi', 'zRLegFmi',
'zLLegLmi',  'zRLegLmi', 'zTrunkFmi', 'zTrunkLmi')
colnames(zScore1)[c(49:58)] <-
c('zLArmFmi', 'zRArmFmi', 'zLArmLmi', 'zRArmLmi', 'zLLegFmi', 'zRLegFmi',
'zLLegLmi',  'zRLegLmi', 'zTrunkFmi', 'zTrunkLmi')
zScore2 <- data.frame(transform(zScore1,
zAvgFmi= (zTrunkFmi+zLArmFmi+zRArmFmi+zLLegFmi+zRLegFmi) / 5,
zAvgLmi= (zTrunkLmi+zLArmLmi+zRArmLmi+zLLegLmi+zRLegLmi) / 5,
ZSDFMI = sd(c(zLArmFmi, zRArmFmi,zLLegFmi,zRLegFmi, zTrunkFmi)),
ZSDLMI = sd(c(zLArmLmi, zRArmLmi,zLLegLmi,zRLegLmi, zTrunkLmi)))
)
View(zScore2)
?sd
FullZSet = rbind(FullZSet, ZScore2)
zScore2 <- data.frame(transform(zScore1,
zAvgFmi= (zTrunkFmi+zLArmFmi+zRArmFmi+zLLegFmi+zRLegFmi) / 5,
zAvgLmi= (zTrunkLmi+zLArmLmi+zRArmLmi+zLLegLmi+zRLegLmi) / 5,
ZSDFMI = sd(c(zLArmFmi, zRArmFmi,zLLegFmi,zRLegFmi, zTrunkFmi)),
ZSDLMI = sd(c(zLArmLmi, zRArmLmi,zLLegLmi,zRLegLmi, zTrunkLmi)))
)
FullZSet = rbind(FullZSet, ZScore2)
FullZSet = rbind(FullZSet, zScore2)
View(FullZSet)
FullZSet = NULL
keep <- c("Race","Gender",'BMI','FMI','LMI',  "height_cm","scan_package_id",
"ageYr",'Gender','Race','zLArmFmi', 'zRArmFmi',
'zLArmLmi', 'zRArmLmi', 'zLLegFmi', 'zRLegFmi',
'zLLegLmi',  'zRLegLmi', 'zTrunkFmi', 'zTrunkLmi','zAvgFmi', 'zAvgLmi', 'ZSDFMI',
'ZSDLMI')
keep <- c('BMI','FMI','LMI',  "height_cm","scan_package_id",
"ageYr",'Gender','Race','zLArmFmi', 'zRArmFmi',
'zLArmLmi', 'zRArmLmi', 'zLLegFmi', 'zRLegFmi',
'zLLegLmi',  'zRLegLmi', 'zTrunkFmi', 'zTrunkLmi','zAvgFmi', 'zAvgLmi', 'ZSDFMI',
'ZSDLMI')
zScore3 <- zScore2[keep]
#These are the n-1 versions of the SDs
FullZSet = rbind(FullZSet, zScore3)
View(FullZSet)
j=2
race = fit3dEligible$Race[j]
gender = fit3dEligible$Gender[j]
age = fit3dEligible$ageYr[j]
zScore <- fit3dEligible[j ,]
if (race == 'Non-Hispanic Black'){
racePrefix = 'b'
}else if (race == 'Non-Hispanic White'){
racePrefix = 'w'
}else if (race == 'Hispanic'){
racePrefix = 'h'
}
if (gender == 'Male'){
genderPrefix = 'm'
}else if (gender == 'Female'){
genderPrefix = 'f'
}
frames <- c(sprintf("%s%sLms", racePrefix, genderPrefix))
df <- get(frames)
lmsChart <- assign(as.character(frames), df, envir= .GlobalEnv)
agerow = age - 7
lmsAge <- lmsChart[agerow ,]
#Converts all to data matrix (better for calculations)
lArmFmi = data.matrix(lmsAge[2])
mArmFmi = data.matrix(lmsAge[3])
sArmFmi = data.matrix(lmsAge[4])
lArmLmi = data.matrix(lmsAge[6])
mArmLmi = data.matrix(lmsAge[7])
sArmLmi = data.matrix(lmsAge[8])
lLegFmi = data.matrix(lmsAge[10])
mLegFmi = data.matrix(lmsAge[11])
sLegFmi = data.matrix(lmsAge[12])
lLegLmi = data.matrix(lmsAge[14])
mLegLmi = data.matrix(lmsAge[15])
sLegLmi = data.matrix(lmsAge[16])
lTrunkFmi = data.matrix(lmsAge[18])
mTrunkFmi = data.matrix(lmsAge[19])
sTrunkFmi = data.matrix(lmsAge[20])
lTrunkLmi = data.matrix(lmsAge[22])
mTrunkLmi = data.matrix(lmsAge[23])
sTrunkLmi = data.matrix(lmsAge[24])
#Select just a row
zScore1 <- transform(zScore,
zLArmFmi= (((leftArmFmi/mArmFmi)^lArmFmi)-1)/(lArmFmi*sArmFmi),
zRArmFmi= (((rightArmFmi/mArmFmi)^lArmFmi)-1)/(lArmFmi*sArmFmi),
zLArmLmi= (((leftArmLmi/mArmLmi)^lArmLmi)-1)/(lArmLmi*sArmLmi),
zRArmLmi= (((rightArmLmi/mArmLmi)^lArmLmi)-1)/(lArmLmi*sArmLmi),
zLLegFmi= (((leftLegFmi/mLegFmi)^lLegFmi)-1)/(lLegFmi*sLegFmi),
zRLegFmi= (((rightLegFmi/mLegFmi)^lLegFmi)-1)/(lLegFmi*sLegFmi),
zLLegLmi= (((leftLegLmi/mLegLmi)^lLegLmi)-1)/(lLegLmi*sLegLmi),
zRLegLmi= (((rightLegLmi/mLegLmi)^lLegLmi)-1)/(lLegLmi*sLegLmi),
zTrunkFmi= (((trunkFmi/mTrunkFmi)^lTrunkFmi)-1)/(lTrunkFmi*sTrunkFmi),
zTrunkLmi= (((trunkLmi/mTrunkLmi)^lTrunkLmi)-1)/(lTrunkLmi*sTrunkLmi))
colnames(zScore1)[c(49:58)] <-
c('zLArmFmi', 'zRArmFmi', 'zLArmLmi', 'zRArmLmi', 'zLLegFmi', 'zRLegFmi',
'zLLegLmi',  'zRLegLmi', 'zTrunkFmi', 'zTrunkLmi')
#Calculates avg z score (useful in finding populations based on avg Z = +2, 0, -2, etc)
zScore2 <- data.frame(transform(zScore1,
zAvgFmi= (zTrunkFmi+zLArmFmi+zRArmFmi+zLLegFmi+zRLegFmi) / 5,
zAvgLmi= (zTrunkLmi+zLArmLmi+zRArmLmi+zLLegLmi+zRLegLmi) / 5,
ZSDFMI = sd(c(zLArmFmi, zRArmFmi,zLLegFmi,zRLegFmi, zTrunkFmi)),
ZSDLMI = sd(c(zLArmLmi, zRArmLmi,zLLegLmi,zRLegLmi, zTrunkLmi)))
)
#Keeps only th
keep <- c('BMI','FMI','LMI',  "height_cm","scan_package_id",
"ageYr",'Gender','Race','zLArmFmi', 'zRArmFmi',
'zLArmLmi', 'zRArmLmi', 'zLLegFmi', 'zRLegFmi',
'zLLegLmi',  'zRLegLmi', 'zTrunkFmi', 'zTrunkLmi','zAvgFmi', 'zAvgLmi', 'ZSDFMI',
'ZSDLMI')
zScore3 <- zScore2[keep]
#These are the n-1 versions of the SDs
FullZSet = rbind(FullZSet, zScore3)
View(FullZSet)
rows = nrow(fit3dEligible)
FullZSet = NULL
for (j in 1:rows){
race = fit3dEligible$Race[j]
gender = fit3dEligible$Gender[j]
age = fit3dEligible$ageYr[j]
zScore <- fit3dEligible[j ,]
if (race == 'Non-Hispanic Black'){
racePrefix = 'b'
}else if (race == 'Non-Hispanic White'){
racePrefix = 'w'
}else if (race == 'Hispanic'){
racePrefix = 'h'
}
if (gender == 'Male'){
genderPrefix = 'm'
}else if (gender == 'Female'){
genderPrefix = 'f'
}
frames <- c(sprintf("%s%sLms", racePrefix, genderPrefix))
df <- get(frames)
lmsChart <- assign(as.character(frames), df, envir= .GlobalEnv)
agerow = age - 7
lmsAge <- lmsChart[agerow ,]
#Converts all to data matrix (better for calculations)
lArmFmi = data.matrix(lmsAge[2])
mArmFmi = data.matrix(lmsAge[3])
sArmFmi = data.matrix(lmsAge[4])
lArmLmi = data.matrix(lmsAge[6])
mArmLmi = data.matrix(lmsAge[7])
sArmLmi = data.matrix(lmsAge[8])
lLegFmi = data.matrix(lmsAge[10])
mLegFmi = data.matrix(lmsAge[11])
sLegFmi = data.matrix(lmsAge[12])
lLegLmi = data.matrix(lmsAge[14])
mLegLmi = data.matrix(lmsAge[15])
sLegLmi = data.matrix(lmsAge[16])
lTrunkFmi = data.matrix(lmsAge[18])
mTrunkFmi = data.matrix(lmsAge[19])
sTrunkFmi = data.matrix(lmsAge[20])
lTrunkLmi = data.matrix(lmsAge[22])
mTrunkLmi = data.matrix(lmsAge[23])
sTrunkLmi = data.matrix(lmsAge[24])
#Select just a row
zScore1 <- transform(zScore,
zLArmFmi= (((leftArmFmi/mArmFmi)^lArmFmi)-1)/(lArmFmi*sArmFmi),
zRArmFmi= (((rightArmFmi/mArmFmi)^lArmFmi)-1)/(lArmFmi*sArmFmi),
zLArmLmi= (((leftArmLmi/mArmLmi)^lArmLmi)-1)/(lArmLmi*sArmLmi),
zRArmLmi= (((rightArmLmi/mArmLmi)^lArmLmi)-1)/(lArmLmi*sArmLmi),
zLLegFmi= (((leftLegFmi/mLegFmi)^lLegFmi)-1)/(lLegFmi*sLegFmi),
zRLegFmi= (((rightLegFmi/mLegFmi)^lLegFmi)-1)/(lLegFmi*sLegFmi),
zLLegLmi= (((leftLegLmi/mLegLmi)^lLegLmi)-1)/(lLegLmi*sLegLmi),
zRLegLmi= (((rightLegLmi/mLegLmi)^lLegLmi)-1)/(lLegLmi*sLegLmi),
zTrunkFmi= (((trunkFmi/mTrunkFmi)^lTrunkFmi)-1)/(lTrunkFmi*sTrunkFmi),
zTrunkLmi= (((trunkLmi/mTrunkLmi)^lTrunkLmi)-1)/(lTrunkLmi*sTrunkLmi))
colnames(zScore1)[c(49:58)] <-
c('zLArmFmi', 'zRArmFmi', 'zLArmLmi', 'zRArmLmi', 'zLLegFmi', 'zRLegFmi',
'zLLegLmi',  'zRLegLmi', 'zTrunkFmi', 'zTrunkLmi')
#Calculates avg z score (useful in finding populations based on avg Z = +2, 0, -2, etc)
zScore2 <- data.frame(transform(zScore1,
zAvgFmi= (zTrunkFmi+zLArmFmi+zRArmFmi+zLLegFmi+zRLegFmi) / 5,
zAvgLmi= (zTrunkLmi+zLArmLmi+zRArmLmi+zLLegLmi+zRLegLmi) / 5,
ZSDFMI = sd(c(zLArmFmi, zRArmFmi,zLLegFmi,zRLegFmi, zTrunkFmi)),
ZSDLMI = sd(c(zLArmLmi, zRArmLmi,zLLegLmi,zRLegLmi, zTrunkLmi)))
)
#Keeps only th
keep <- c('BMI','FMI','LMI',  "height_cm","scan_package_id",
"ageYr",'Gender','Race','zLArmFmi', 'zRArmFmi',
'zLArmLmi', 'zRArmLmi', 'zLLegFmi', 'zRLegFmi',
'zLLegLmi',  'zRLegLmi', 'zTrunkFmi', 'zTrunkLmi','zAvgFmi', 'zAvgLmi', 'ZSDFMI',
'ZSDLMI')
zScore3 <- zScore2[keep]
#These are the n-1 versions of the SDs
FullZSet = rbind(FullZSet, zScore3)
#Changes column names to create the radar charts later on
}#End of For statment
bmArmFmiLms <-
read.table("data/BlackFmiLmi_Male_AvgArmFMI_020202t.txt", header=T, skip=10, sep="\t")
bmArmLmiLms <-
read.table("data/BlackFmiLmi_Male_AvgArmLMI_020601t.txt", header=T, skip=10, sep="\t")
bmLegFmiLms <-
read.table("data/BlackFmiLmi_Male_AvgLegFMI_020202t.txt", header=T, skip=10, sep="\t")
bmLegLmiLms <-
read.table("data/BlackFmiLmi_Male_AvgLegLMI_010501t.txt", header=T, skip=10, sep="\t")
bmTrunkFmiLms <-
read.table("data/BlackFmiLmi_Male_TrunkFMI_020401tt.txt", header=T, skip=10, sep="\t")
#This blew up at 8 yr old and didn't display a number so I put a junk variable in.
bmTrunkLmiLms <-
read.table("data/BlackFmiLmi_Male_TrunkLMI_010601t.txt", header=T, skip=10, sep="\t")
#Keeps only the relevant columns for the black males
bmLms <- cbind(bmArmFmiLms[keep], bmArmLmiLms[keep],
bmLegFmiLms[keep], bmLegLmiLms[keep],
bmTrunkFmiLms[keep], bmTrunkLmiLms[keep])
bmArmFmiLms <-
read.table("data/BlackFmiLmi_Male_AvgArmFMI_020202t.txt", header=T, skip=10, sep="\t")
bmArmLmiLms <-
read.table("data/BlackFmiLmi_Male_AvgArmLMI_020601t.txt", header=T, skip=10, sep="\t")
bmLegFmiLms <-
read.table("data/BlackFmiLmi_Male_AvgLegFMI_020202t.txt", header=T, skip=10, sep="\t")
bmLegLmiLms <-
read.table("data/BlackFmiLmi_Male_AvgLegLMI_010501t.txt", header=T, skip=10, sep="\t")
bmTrunkFmiLms <-
read.table("data/BlackFmiLmi_Male_TrunkFMI_020401tt.txt", header=T, skip=10, sep="\t")
#This blew up at 8 yr old and didn't display a number so I put a junk variable in.
bmTrunkLmiLms <-
read.table("data/BlackFmiLmi_Male_TrunkLMI_010601t.txt", header=T, skip=10, sep="\t")
#Keeps only the relevant columns for the black males
bmLms <- cbind(bmArmFmiLms[keep], bmArmLmiLms[keep],
bmLegFmiLms[keep], bmLegLmiLms[keep],
bmTrunkFmiLms[keep], bmTrunkLmiLms[keep])
bmArmFmiLms <-
read.table("data/BlackFmiLmi_Male_AvgArmFMI_020202t.txt", header=T, skip=10, sep="\t")
bmArmLmiLms <-
read.table("data/BlackFmiLmi_Male_AvgArmLMI_020601t.txt", header=T, skip=10, sep="\t")
bmLegFmiLms <-
read.table("data/BlackFmiLmi_Male_AvgLegFMI_020202t.txt", header=T, skip=10, sep="\t")
bmLegLmiLms <-
read.table("data/BlackFmiLmi_Male_AvgLegLMI_010501t.txt", header=T, skip=10, sep="\t")
bmTrunkFmiLms <-
read.table("data/BlackFmiLmi_Male_TrunkFMI_020401tt.txt", header=T, skip=10, sep="\t")
#This blew up at 8 yr old and didn't display a number so I put a junk variable in.
bmTrunkLmiLms <-
read.table("data/BlackFmiLmi_Male_TrunkLMI_010601t.txt", header=T, skip=10, sep="\t")
bmLms <- cbind(bmArmFmiLms[keep], bmArmLmiLms[keep],
bmLegFmiLms[keep], bmLegLmiLms[keep],
bmTrunkFmiLms[keep], bmTrunkLmiLms[keep])
View(bmTrunkFmiLms)
View(bmTrunkLmiLms)
View(bmLegLmiLms)
View(bmArmLmiLms)
bmTrunkFmiLms[keep]
View(bmTrunkFmiLms)
bmTrunkLmiLms[keep]
bfTrunkLmiLms[keep]
keep <- c("Age","L", "M", "S")
bmArmFmiLms <-
read.table("data/BlackFmiLmi_Male_AvgArmFMI_020202t.txt", header=T, skip=10, sep="\t")
bmArmLmiLms <-
read.table("data/BlackFmiLmi_Male_AvgArmLMI_020601t.txt", header=T, skip=10, sep="\t")
bmLegFmiLms <-
read.table("data/BlackFmiLmi_Male_AvgLegFMI_020202t.txt", header=T, skip=10, sep="\t")
bmLegLmiLms <-
read.table("data/BlackFmiLmi_Male_AvgLegLMI_010501t.txt", header=T, skip=10, sep="\t")
bmTrunkFmiLms <-
read.table("data/BlackFmiLmi_Male_TrunkFMI_020401tt.txt", header=T, skip=10, sep="\t")
#This blew up at 8 yr old and didn't display a number so I put a junk variable in.
bmTrunkLmiLms <-
read.table("data/BlackFmiLmi_Male_TrunkLMI_010601t.txt", header=T, skip=10, sep="\t")
#Keeps only the relevant columns for the black males
bmLms <- cbind(bmArmFmiLms[keep], bmArmLmiLms[keep],
bmLegFmiLms[keep], bmLegLmiLms[keep],
bmTrunkFmiLms[keep], bmTrunkLmiLms[keep])
keep <- c("Age","L", "M", "S")
bfArmFmiLms <-
read.table("data/BlackFmiLmi_Female_AvgArmFMI_020202t.txt", header=T, skip=10, sep="\t")
bfArmLmiLms <-
read.table("data/BlackFmiLmi_Female_AvgArmLMI_010401t.txt", header=T, skip=10, sep="\t")
bfLegFmiLms <-
read.table("data/BlackFmiLmi_Female_AvgLegFMI_020302t.txt", header=T, skip=10, sep="\t")
bfLegLmiLms <-
read.table("data/BlackFmiLmi_Female_AvgLegLMI_010401t.txt", header=T, skip=10, sep="\t")
bfTrunkFmiLms <-
read.table("data/BlackFmiLmi_Female_TrunkFMI_020402t.txt", header=T, skip=10, sep="\t")
bfTrunkLmiLms <-
read.table("data/BlackFmiLmi_Female_TrunkLMI_010401t.txt", header=T, skip=10, sep="\t")
#Keeps only the relevant columns for the black females
bfLms <- cbind(bfArmFmiLms[keep], bfArmLmiLms[keep],
bfLegFmiLms[keep], bfLegLmiLms[keep],
bfTrunkFmiLms[keep], bfTrunkLmiLms[keep])
bmArmFmiLms <-
read.table("data/BlackFmiLmi_Male_AvgArmFMI_020202t.txt", header=T, skip=10, sep="\t")
bmArmLmiLms <-
read.table("data/BlackFmiLmi_Male_AvgArmLMI_020601t.txt", header=T, skip=10, sep="\t")
bmLegFmiLms <-
read.table("data/BlackFmiLmi_Male_AvgLegFMI_020202t.txt", header=T, skip=10, sep="\t")
bmLegLmiLms <-
read.table("data/BlackFmiLmi_Male_AvgLegLMI_010501t.txt", header=T, skip=10, sep="\t")
bmTrunkFmiLms <-
read.table("data/BlackFmiLmi_Male_TrunkFMI_020401tt.txt", header=T, skip=10, sep="\t")
#This blew up at 8 yr old and didn't display a number so I put a junk variable in.
bmTrunkLmiLms <-
read.table("data/BlackFmiLmi_Male_TrunkLMI_010601t.txt", header=T, skip=10, sep="\t")
#Keeps only the relevant columns for the black males
bmLms <- cbind(bmArmFmiLms[keep], bmArmLmiLms[keep],
bmLegFmiLms[keep], bmLegLmiLms[keep],
bmTrunkFmiLms[keep], bmTrunkLmiLms[keep])
hfArmFmiLms <-
read.table("data/HispFmiLmi_Female_AvgArmFMI_020302t.txt", header=T, skip=10, sep="\t")
hfArmLmiLms <-
read.table("data/HispFmiLmi_Female_AvgArmLMI_020401t.txt", header=T, skip=10, sep="\t")
hfLegFmiLms <-
read.table("data/HispFmiLmi_Female_AvgLegFMI_020301t.txt", header=T, skip=10, sep="\t")
hfLegLmiLms <-
read.table("data/HispFmiLmi_Female_AveLegLMI_020401t.txt", header=T, skip=10, sep="\t")
hfTrunkFmiLms <-
read.table("data/HispFmiLmi_Female_TrunkFMI_020402t.txt", header=T, skip=10, sep="\t")
hfTrunkLmiLms <-
read.table("data/HispFmiLmi_Female_TrunkLMI_020401t.txt", header=T, skip=10, sep="\t")
#Hispanic Females
hfLms <- cbind(hfArmFmiLms[keep], hfArmLmiLms[keep],
hfLegFmiLms[keep], hfLegLmiLms[keep],
hfTrunkFmiLms[keep], hfTrunkLmiLms[keep])
hmArmFmiLms <-
read.table("data/HispFmiLmi_Male_AvgArmFMI_010403t.txt", header=T, skip=10, sep="\t")
hmArmLmiLms <-
read.table("data/HispFmiLmi_Male_AvgArmLMI_010702t.txt", header=T, skip=10, sep="\t")
hmLegFmiLms <-
read.table("data/HispFmiLmi_Male__AvgLegFMI_010102t.txt", header=T, skip=10, sep="\t")
hmLegLmiLms <-
read.table("data/HispFmiLmi_Male_AvgLegLMI_010602t.txt", header=T, skip=10, sep="\t")
hmTrunkFmiLms <-
read.table("data/HispFmiLmi_Male_TrunkFMI_020502t.txt", header=T, skip=10, sep="\t")
hmTrunkLmiLms <-
read.table("data/HispFmiLmi_Male_TrunkLMI_010702t.txt", header=T, skip=10, sep="\t")
#Hispanic Males
hmLms <- cbind(hmArmFmiLms[keep], hmArmLmiLms[keep],
hmLegFmiLms[keep], hmLegLmiLms[keep],
hmTrunkFmiLms[keep], hmTrunkLmiLms[keep])
wfArmFmiLms <-
read.table("data/WhiteFmiLmi_Female_AvgArmFMI_020202t.txt", header=T, skip=10, sep="\t")
wfArmLmiLms <-
read.table("data/WhiteFmiLmi_Female_AvgArmLMI_010401t.txt", header=T, skip=10, sep="\t")
wfLegFmiLms <-
read.table("data/WhiteFmiLmi_Female_AvgLegFMI_020301t.txt", header=T, skip=10, sep="\t")
wfLegLmiLms <-
read.table("data/WhiteFmiLmi_Female_AvgLegLMI_010601t.txt", header=T, skip=10, sep="\t")
wfTrunkFmiLms <-
read.table("data/WhiteFmiLmi_Female_TrunkFMI_020402t.txt", header=T, skip=10, sep="\t")
wfTrunkLmiLms <-
read.table("data/WhiteFmiLmi_Female_TrunkLMI_010401t.txt", header=T, skip=10, sep="\t")
#White Females
wfLms <- cbind(wfArmFmiLms[keep], wfArmLmiLms[keep],
wfLegFmiLms[keep], wfLegLmiLms[keep],
wfTrunkFmiLms[keep], wfTrunkLmiLms[keep])
wmArmFmiLms <-
read.table("data/WhiteFmiLmi_Male_AvgArmFMI_020402t.txt", header=T, skip=10, sep="\t")
wmArmLmiLms <-
read.table("data/WhiteFmiLmi_Male_AvgArmLMI_010801t.txt", header=T, skip=10, sep="\t")
wmLegFmiLms <-
read.table("data/WhiteFmiLmi_Male_AvgLegFMI_010202t.txt", header=T, skip=10, sep="\t")
wmLegLmiLms <-
read.table("data/WhiteFmiLmi_Male_AvgLagLMI_020702t.txt", header=T, skip=10, sep="\t")
wmTrunkFmiLms <-
read.table("data/WhiteFmiLmi_Male_TrunkFMI_020502t.txt", header=T, skip=10, sep="\t")
wmTrunkLmiLms <-
read.table("data/WhiteFmiLmi_Male_TrunkLMI_020702t.txt", header=T, skip=10, sep="\t")
#White Males
wmLms <- cbind(wmArmFmiLms[keep], wmArmLmiLms[keep],
wmLegFmiLms[keep], wmLegLmiLms[keep],
wmTrunkFmiLms[keep], wmTrunkLmiLms[keep])
for (j in 1:rows){
race = fit3dEligible$Race[j]
gender = fit3dEligible$Gender[j]
age = fit3dEligible$ageYr[j]
zScore <- fit3dEligible[j ,]
if (race == 'Non-Hispanic Black'){
racePrefix = 'b'
}else if (race == 'Non-Hispanic White'){
racePrefix = 'w'
}else if (race == 'Hispanic'){
racePrefix = 'h'
}
if (gender == 'Male'){
genderPrefix = 'm'
}else if (gender == 'Female'){
genderPrefix = 'f'
}
frames <- c(sprintf("%s%sLms", racePrefix, genderPrefix))
df <- get(frames)
lmsChart <- assign(as.character(frames), df, envir= .GlobalEnv)
agerow = age - 7
lmsAge <- lmsChart[agerow ,]
#Converts all to data matrix (better for calculations)
lArmFmi = data.matrix(lmsAge[2])
mArmFmi = data.matrix(lmsAge[3])
sArmFmi = data.matrix(lmsAge[4])
lArmLmi = data.matrix(lmsAge[6])
mArmLmi = data.matrix(lmsAge[7])
sArmLmi = data.matrix(lmsAge[8])
lLegFmi = data.matrix(lmsAge[10])
mLegFmi = data.matrix(lmsAge[11])
sLegFmi = data.matrix(lmsAge[12])
lLegLmi = data.matrix(lmsAge[14])
mLegLmi = data.matrix(lmsAge[15])
sLegLmi = data.matrix(lmsAge[16])
lTrunkFmi = data.matrix(lmsAge[18])
mTrunkFmi = data.matrix(lmsAge[19])
sTrunkFmi = data.matrix(lmsAge[20])
lTrunkLmi = data.matrix(lmsAge[22])
mTrunkLmi = data.matrix(lmsAge[23])
sTrunkLmi = data.matrix(lmsAge[24])
#Select just a row
zScore1 <- transform(zScore,
zLArmFmi= (((leftArmFmi/mArmFmi)^lArmFmi)-1)/(lArmFmi*sArmFmi),
zRArmFmi= (((rightArmFmi/mArmFmi)^lArmFmi)-1)/(lArmFmi*sArmFmi),
zLArmLmi= (((leftArmLmi/mArmLmi)^lArmLmi)-1)/(lArmLmi*sArmLmi),
zRArmLmi= (((rightArmLmi/mArmLmi)^lArmLmi)-1)/(lArmLmi*sArmLmi),
zLLegFmi= (((leftLegFmi/mLegFmi)^lLegFmi)-1)/(lLegFmi*sLegFmi),
zRLegFmi= (((rightLegFmi/mLegFmi)^lLegFmi)-1)/(lLegFmi*sLegFmi),
zLLegLmi= (((leftLegLmi/mLegLmi)^lLegLmi)-1)/(lLegLmi*sLegLmi),
zRLegLmi= (((rightLegLmi/mLegLmi)^lLegLmi)-1)/(lLegLmi*sLegLmi),
zTrunkFmi= (((trunkFmi/mTrunkFmi)^lTrunkFmi)-1)/(lTrunkFmi*sTrunkFmi),
zTrunkLmi= (((trunkLmi/mTrunkLmi)^lTrunkLmi)-1)/(lTrunkLmi*sTrunkLmi))
colnames(zScore1)[c(49:58)] <-
c('zLArmFmi', 'zRArmFmi', 'zLArmLmi', 'zRArmLmi', 'zLLegFmi', 'zRLegFmi',
'zLLegLmi',  'zRLegLmi', 'zTrunkFmi', 'zTrunkLmi')
#Calculates avg z score (useful in finding populations based on avg Z = +2, 0, -2, etc)
zScore2 <- data.frame(transform(zScore1,
zAvgFmi= (zTrunkFmi+zLArmFmi+zRArmFmi+zLLegFmi+zRLegFmi) / 5,
zAvgLmi= (zTrunkLmi+zLArmLmi+zRArmLmi+zLLegLmi+zRLegLmi) / 5,
ZSDFMI = sd(c(zLArmFmi, zRArmFmi,zLLegFmi,zRLegFmi, zTrunkFmi)),
ZSDLMI = sd(c(zLArmLmi, zRArmLmi,zLLegLmi,zRLegLmi, zTrunkLmi)))
)
#Keeps only th
keep <- c('BMI','FMI','LMI',  "height_cm","scan_package_id",
"ageYr",'Gender','Race','zLArmFmi', 'zRArmFmi',
'zLArmLmi', 'zRArmLmi', 'zLLegFmi', 'zRLegFmi',
'zLLegLmi',  'zRLegLmi', 'zTrunkFmi', 'zTrunkLmi','zAvgFmi', 'zAvgLmi', 'ZSDFMI',
'ZSDLMI')
zScore3 <- zScore2[keep]
#These are the n-1 versions of the SDs
FullZSet = rbind(FullZSet, zScore3)
#Changes column names to create the radar charts later on
}#End of For statment
View(FullZSet)
shiny::runApp()
shiny::runApp()
View(FullZSet)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
