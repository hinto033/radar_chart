zTrunkLmi= (((trunkLmi/mTrunkLmi)^lTrunkLmi)-1)/(lTrunkLmi*sTrunkLmi))
colnames(zScore1)[c(49:58)] <-
c('zLArmFmi', 'zRArmFmi', 'zLArmLmi', 'zRArmLmi', 'zLLegFmi', 'zRLegFmi',
'zLLegLmi',  'zRLegLmi', 'zTrunkFmi', 'zTrunkLmi')
#Calculates avg z score (useful in finding populations based on avg Z = +2, 0, -2, etc)
zScore2 <- data.frame(transform(zScore1,
zAvgFmi= (zTrunkFmi+zLArmFmi+zRArmFmi+zLLegFmi+zRLegFmi) / 5,
zAvgLmi= (zTrunkLmi+zLArmLmi+zRArmLmi+zLLegLmi+zRLegLmi) / 5,
ZSDFMI = sd(c(zLArmFmi, zRArmFmi,zLLegFmi,zRLegFmi, zTrunkFmi)),
ZSDLMI = sd(c(zLArmLmi, zRArmLmi,zLLegLmi,zRLegLmi, zTrunkLmi)))
)
#Keeps only th
keep <- c('BMI','FMI','LMI',  "height_cm","scan_package_id",
"ageYr",'Gender','Race','zLArmFmi', 'zRArmFmi',
'zLArmLmi', 'zRArmLmi', 'zLLegFmi', 'zRLegFmi',
'zLLegLmi',  'zRLegLmi', 'zTrunkFmi', 'zTrunkLmi','zAvgFmi', 'zAvgLmi', 'ZSDFMI',
'ZSDLMI')
zScore3 <- zScore2[keep]
#These are the n-1 versions of the SDs
FullZSet = rbind(FullZSet, zScore3)
#Changes column names to create the radar charts later on
}#End of For statment
View(FullZSet)
shiny::runApp()
shiny::runApp()
View(FullZSet)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
'input$RARM_FAT','input$RARM_LEAN','input$LARM_FAT',)
shiny::runApp()
output$text1 <- renderText({
#total <- total1[ which(total1$Gender==input$gender
#                      & total1$Race==input$race) , ]
zData2 <- FullZSet[input$Person , ]
paste("Age/Gender/Race: ", zData2$ageYr, zData2$Gender, zData2$Race)
})
output$text2 <- renderText({
#total <- total1[ which(total1$Gender==input$gender
#                      & total1$Race==input$race) , ]
zData2 <- FullZSet[input$Person , ]
paste("BMI/FMI/LMI: ", zData2$BMI, zData2$FMI, zData2$LMI)
})
output$text3 <- renderText({
#total <- total1[ which(total1$Gender==input$gender
#                      & total1$Race==input$race) , ]
zData2 <- FullZSet[input$Person , ]
paste("Package ID Number: ", zData2$scan_package_id)
})
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
dfit3dBase = c('input$ageYr', 'input$height_cm','input$Race','input$Gender',
'input$RARM_FAT','input$RARM_LEAN','input$LARM_FAT',
'input$LARM_LEAN','input$L_LEG_FAT','input$L_LEG_LEAN',
'input$R_LEG_FAT','input$R_LEG_LEAN','TRUNK_FAT',
'input$TRUNK_LEAN')
dfit3dBase = data.frame(c('input$ageYr', 'input$height_cm','input$Race','input$Gender',
'input$RARM_FAT','input$RARM_LEAN','input$LARM_FAT',
'input$LARM_LEAN','input$L_LEG_FAT','input$L_LEG_LEAN',
'input$R_LEG_FAT','input$R_LEG_LEAN','TRUNK_FAT',
'input$TRUNK_LEAN'))
View(dfit3dBase)
dfit3dBase = t(data.frame(c('input$ageYr', 'input$height_cm','input$Race','input$Gender',
'input$RARM_FAT','input$RARM_LEAN','input$LARM_FAT',
'input$LARM_LEAN','input$L_LEG_FAT','input$L_LEG_LEAN',
'input$R_LEG_FAT','input$R_LEG_LEAN','TRUNK_FAT',
'input$TRUNK_LEAN')))
View(dfit3dBase)
colnames(dfit3dBase) <- c( "ageYr","height_cm",'Race','Gender','Z_FMI_RA', 'Z_LMI_RA',
'Z_FMI_LA', 'Z_LMI_LA', 'Z_FMI_LL', 'Z_LMI_LL',
'Z_FMI_RL',  'Z_LMI_RL', 'Z_FMI_TR', 'Z_LMI_TR')
View(dfit3dBase)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
dfit3dBase = t(data.frame(c('input$ageYr', 'input$height_cm','input$Race','input$Gender',
'input$RARM_FAT','input$RARM_LEAN','input$LARM_FAT',
'input$LARM_LEAN','input$L_LEG_FAT','input$L_LEG_LEAN',
'input$R_LEG_FAT','input$R_LEG_LEAN','TRUNK_FAT',
'input$TRUNK_LEAN')))
colnames(dfit3dBase) <- c( "ageYr","height_cm",'Race','Gender','RARM_FAT', 'RARM_LEAN',
'LARM_FAT', 'LARM_LEAN', 'L_LEG_FAT', 'L_LEG_LEAN',
'R_LEG_FAT',  'R_LEG_LEAN', 'TRUNK_FAT', 'TRUNK_LEAN')
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
setwd('X:\\bhinton\\radar_chart\\Plot-From-DXA')
blackData <- read.table(file=sprintf("data/Black.ZScoreValues.txt", sep="\t"))
hispData <- read.table(file=sprintf("data/Hisp.ZScoreValues.txt", sep="\t"))
whiteData <- read.table(file=sprintf("data/White.ZScoreValues.txt", sep="\t"))
fullData <- rbind(blackData, hispData, whiteData)
#Specifies which columns to keep from LMS tables
keep <- c("Age","L", "M", "S")
bfArmFmiLms <-
read.table("data/BlackFmiLmi_Female_AvgArmFMI_020202t.txt", header=T, skip=10, sep="\t")
bfArmLmiLms <-
read.table("data/BlackFmiLmi_Female_AvgArmLMI_010401t.txt", header=T, skip=10, sep="\t")
bfLegFmiLms <-
read.table("data/BlackFmiLmi_Female_AvgLegFMI_020302t.txt", header=T, skip=10, sep="\t")
bfLegLmiLms <-
read.table("data/BlackFmiLmi_Female_AvgLegLMI_010401t.txt", header=T, skip=10, sep="\t")
bfTrunkFmiLms <-
read.table("data/BlackFmiLmi_Female_TrunkFMI_020402t.txt", header=T, skip=10, sep="\t")
bfTrunkLmiLms <-
read.table("data/BlackFmiLmi_Female_TrunkLMI_010401t.txt", header=T, skip=10, sep="\t")
#Keeps only the relevant columns for the black females
bfLms <- cbind(bfArmFmiLms[keep], bfArmLmiLms[keep],
bfLegFmiLms[keep], bfLegLmiLms[keep],
bfTrunkFmiLms[keep], bfTrunkLmiLms[keep])
bmArmFmiLms <-
read.table("data/BlackFmiLmi_Male_AvgArmFMI_020202t.txt", header=T, skip=10, sep="\t")
bmArmLmiLms <-
read.table("data/BlackFmiLmi_Male_AvgArmLMI_020601t.txt", header=T, skip=10, sep="\t")
bmLegFmiLms <-
read.table("data/BlackFmiLmi_Male_AvgLegFMI_020202t.txt", header=T, skip=10, sep="\t")
bmLegLmiLms <-
read.table("data/BlackFmiLmi_Male_AvgLegLMI_010501t.txt", header=T, skip=10, sep="\t")
bmTrunkFmiLms <-
read.table("data/BlackFmiLmi_Male_TrunkFMI_020401tt.txt", header=T, skip=10, sep="\t")
#This blew up at 8 yr old and didn't display a number so I put a junk variable in.
bmTrunkLmiLms <-
read.table("data/BlackFmiLmi_Male_TrunkLMI_010601t.txt", header=T, skip=10, sep="\t")
#Keeps only the relevant columns for the black males
bmLms <- cbind(bmArmFmiLms[keep], bmArmLmiLms[keep],
bmLegFmiLms[keep], bmLegLmiLms[keep],
bmTrunkFmiLms[keep], bmTrunkLmiLms[keep])
hfArmFmiLms <-
read.table("data/HispFmiLmi_Female_AvgArmFMI_020302t.txt", header=T, skip=10, sep="\t")
hfArmLmiLms <-
read.table("data/HispFmiLmi_Female_AvgArmLMI_020401t.txt", header=T, skip=10, sep="\t")
hfLegFmiLms <-
read.table("data/HispFmiLmi_Female_AvgLegFMI_020301t.txt", header=T, skip=10, sep="\t")
hfLegLmiLms <-
read.table("data/HispFmiLmi_Female_AveLegLMI_020401t.txt", header=T, skip=10, sep="\t")
hfTrunkFmiLms <-
read.table("data/HispFmiLmi_Female_TrunkFMI_020402t.txt", header=T, skip=10, sep="\t")
hfTrunkLmiLms <-
read.table("data/HispFmiLmi_Female_TrunkLMI_020401t.txt", header=T, skip=10, sep="\t")
#Hispanic Females
hfLms <- cbind(hfArmFmiLms[keep], hfArmLmiLms[keep],
hfLegFmiLms[keep], hfLegLmiLms[keep],
hfTrunkFmiLms[keep], hfTrunkLmiLms[keep])
hmArmFmiLms <-
read.table("data/HispFmiLmi_Male_AvgArmFMI_010403t.txt", header=T, skip=10, sep="\t")
hmArmLmiLms <-
read.table("data/HispFmiLmi_Male_AvgArmLMI_010702t.txt", header=T, skip=10, sep="\t")
hmLegFmiLms <-
read.table("data/HispFmiLmi_Male__AvgLegFMI_010102t.txt", header=T, skip=10, sep="\t")
hmLegLmiLms <-
read.table("data/HispFmiLmi_Male_AvgLegLMI_010602t.txt", header=T, skip=10, sep="\t")
hmTrunkFmiLms <-
read.table("data/HispFmiLmi_Male_TrunkFMI_020502t.txt", header=T, skip=10, sep="\t")
hmTrunkLmiLms <-
read.table("data/HispFmiLmi_Male_TrunkLMI_010702t.txt", header=T, skip=10, sep="\t")
#Hispanic Males
hmLms <- cbind(hmArmFmiLms[keep], hmArmLmiLms[keep],
hmLegFmiLms[keep], hmLegLmiLms[keep],
hmTrunkFmiLms[keep], hmTrunkLmiLms[keep])
wfArmFmiLms <-
read.table("data/WhiteFmiLmi_Female_AvgArmFMI_020202t.txt", header=T, skip=10, sep="\t")
wfArmLmiLms <-
read.table("data/WhiteFmiLmi_Female_AvgArmLMI_010401t.txt", header=T, skip=10, sep="\t")
wfLegFmiLms <-
read.table("data/WhiteFmiLmi_Female_AvgLegFMI_020301t.txt", header=T, skip=10, sep="\t")
wfLegLmiLms <-
read.table("data/WhiteFmiLmi_Female_AvgLegLMI_010601t.txt", header=T, skip=10, sep="\t")
wfTrunkFmiLms <-
read.table("data/WhiteFmiLmi_Female_TrunkFMI_020402t.txt", header=T, skip=10, sep="\t")
wfTrunkLmiLms <-
read.table("data/WhiteFmiLmi_Female_TrunkLMI_010401t.txt", header=T, skip=10, sep="\t")
#White Females
wfLms <- cbind(wfArmFmiLms[keep], wfArmLmiLms[keep],
wfLegFmiLms[keep], wfLegLmiLms[keep],
wfTrunkFmiLms[keep], wfTrunkLmiLms[keep])
wmArmFmiLms <-
read.table("data/WhiteFmiLmi_Male_AvgArmFMI_020402t.txt", header=T, skip=10, sep="\t")
wmArmLmiLms <-
read.table("data/WhiteFmiLmi_Male_AvgArmLMI_010801t.txt", header=T, skip=10, sep="\t")
wmLegFmiLms <-
read.table("data/WhiteFmiLmi_Male_AvgLegFMI_010202t.txt", header=T, skip=10, sep="\t")
wmLegLmiLms <-
read.table("data/WhiteFmiLmi_Male_AvgLagLMI_020702t.txt", header=T, skip=10, sep="\t")
wmTrunkFmiLms <-
read.table("data/WhiteFmiLmi_Male_TrunkFMI_020502t.txt", header=T, skip=10, sep="\t")
wmTrunkLmiLms <-
read.table("data/WhiteFmiLmi_Male_TrunkLMI_020702t.txt", header=T, skip=10, sep="\t")
#White Males
wmLms <- cbind(wmArmFmiLms[keep], wmArmLmiLms[keep],
wmLegFmiLms[keep], wmLegLmiLms[keep],
wmTrunkFmiLms[keep], wmTrunkLmiLms[keep])
maxmin <- data.frame(
Z_TR=c(2, -2),
Z_LA=c(2, -2),
Z_LL=c(2, -2),
Z_RL=c(2, -2),
Z_RA=c(2, -2))
shiny::runApp()
dfit3dBase <- transform(dfit3dBase,
ageYr = 20, height_cm = 180,
Race = 'Hispanic', Gender = 'Female',
RARM_FAT = 1500, RARM_LEAN = 4000,
LARM_FAT = 1500, LARM_LEAN = 4000,
L_LEG_FAT = 4000, L_LEG_LEAN = 10000,
R_LEG_FAT = 4000, R_LEG_LEAN = 10000,
TRUNK_FAT = 6000, TRUNK_LEAN = 14000 )
dfit3dBase <- NULL
dfit3dBase <- transform(dfit3dBase,
ageYr = 20, height_cm = 180,
Race = 'Hispanic', Gender = 'Female',
RARM_FAT = 1500, RARM_LEAN = 4000,
LARM_FAT = 1500, LARM_LEAN = 4000,
L_LEG_FAT = 4000, L_LEG_LEAN = 10000,
R_LEG_FAT = 4000, R_LEG_LEAN = 10000,
TRUNK_FAT = 6000, TRUNK_LEAN = 14000 )
dfit3dBase <- transform(dfit3dBase,
ageYr = 20, height_cm = 180,
Race = 'Hispanic', Gender = 'Female',
RARM_FAT = 1500, RARM_LEAN = 4000,
LARM_FAT = 1500, LARM_LEAN = 4000,
L_LEG_FAT = 4000, L_LEG_LEAN = 10000,
R_LEG_FAT = 4000, R_LEG_LEAN = 10000,
TRUNK_FAT = 6000, TRUNK_LEAN = 14000 )
dfit3dBase <- data.frame(transform(dfit3dBase,
ageYr = 20, height_cm = 180,
Race = 'Hispanic', Gender = 'Female',
RARM_FAT = 1500, RARM_LEAN = 4000,
LARM_FAT = 1500, LARM_LEAN = 4000,
L_LEG_FAT = 4000, L_LEG_LEAN = 10000,
R_LEG_FAT = 4000, R_LEG_LEAN = 10000,
TRUNK_FAT = 6000, TRUNK_LEAN = 14000 ))
ageYr = 20
height_cm = 180
Race = 'Hispanic'
Gender = 'Female'
RARM_FAT = 1500
RARM_LEAN = 4000
LARM_FAT = 1500
LARM_LEAN = 4000
L_LEG_FAT = 4000
L_LEG_LEAN = 10000
R_LEG_FAT = 4000
R_LEG_LEAN = 10000
TRUNK_FAT = 6000
TRUNK_LEAN = 14000
dfit3dBase <- cbind(ageYr ,height_cm, Race , Gender ,
RARM_FAT, RARM_LEAN , LARM_FAT , LARM_LEAN ,
L_LEG_FAT , L_LEG_LEAN ,R_LEG_FAT, R_LEG_LEAN ,
TRUNK_FAT, TRUNK_LEAN )
dfit3dBase <- data.frame(cbind(ageYr ,height_cm, Race , Gender ,
RARM_FAT, RARM_LEAN , LARM_FAT , LARM_LEAN ,
L_LEG_FAT , L_LEG_LEAN ,R_LEG_FAT, R_LEG_LEAN ,
TRUNK_FAT, TRUNK_LEAN ))
View(dfit3dBase)
colnames(dfit3dBase) <- c( "ageYr","height_cm",'Race','Gender','RARM_FAT', 'RARM_LEAN',
'LARM_FAT', 'LARM_LEAN', 'L_LEG_FAT', 'L_LEG_LEAN',
'R_LEG_FAT',  'R_LEG_LEAN', 'TRUNK_FAT', 'TRUNK_LEAN')
dfit3dBase <- transform(dfit3dBase,
trunkFmi = (TRUNK_FAT/1000) / ((height_cm/100)^2),
leftArmFmi = (LARM_FAT/1000) / ((height_cm/100)^2),
leftLegFmi = (L_LEG_FAT/1000) / ((height_cm/100)^2),
rightLegFmi = (R_LEG_FAT/1000) / ((height_cm/100)^2),
rightArmFmi = (RARM_FAT/1000) / ((height_cm/100)^2),
trunkLmi = (TRUNK_LEAN/1000) / ((height_cm/100)^2),
leftArmLmi = (LARM_LEAN/1000) / ((height_cm/100)^2),
leftLegLmi = (L_LEG_LEAN/1000) / ((height_cm/100)^2),
rightLegLmi = (R_LEG_LEAN/1000) / ((height_cm/100)^2),
rightArmLmi = (RARM_LEAN/1000) / ((height_cm/100)^2)
)
warnings()
dfit3dBase <- data.frame(as.numeric(cbind(ageYr ,height_cm, Race , Gender ,
RARM_FAT, RARM_LEAN , LARM_FAT , LARM_LEAN ,
L_LEG_FAT , L_LEG_LEAN ,R_LEG_FAT, R_LEG_LEAN ,
TRUNK_FAT, TRUNK_LEAN )))
dfit3dBase <- transform(dfit3dBase,
ageYr = input$AgeYr, height_cm = input$height_cm,
Race = input$Race, Gender = input$Gender,
RARM_FAT = input$RARM_FAT, RARM_LEAN = input$RARM_LEAN,
LARM_FAT = input$LARM_FAT, LARM_LEAN = input$LARM_LEAN,
L_LEG_FAT = input$L_LEG_FAT, L_LEG_LEAN = input$L_LEG_LEAN,
R_LEG_FAT = input$R_LEG_FAT, R_LEG_LEAN = input$R_LEG_LEAN,
TRUNK_FAT = input$TRUNK_FAT, TRUNK_LEAN = input$TRUNK_LEAN )
dfit3dBase <- data.frame(as.numeric(cbind(ageYr ,height_cm, Race , Gender ,
RARM_FAT, RARM_LEAN , LARM_FAT , LARM_LEAN ,
L_LEG_FAT , L_LEG_LEAN ,R_LEG_FAT, R_LEG_LEAN ,
TRUNK_FAT, TRUNK_LEAN )))
colnames(dfit3dBase) <- c( "ageYr","height_cm",'Race','Gender','RARM_FAT', 'RARM_LEAN',
'LARM_FAT', 'LARM_LEAN', 'L_LEG_FAT', 'L_LEG_LEAN',
'R_LEG_FAT',  'R_LEG_LEAN', 'TRUNK_FAT', 'TRUNK_LEAN')
View(dfit3dBase)
ageYr = 20
height_cm = 180
Race = 'Hispanic'
Gender = 'Female'
RARM_FAT = 1500
RARM_LEAN = 4000
LARM_FAT = 1500
LARM_LEAN = 4000
L_LEG_FAT = 4000
L_LEG_LEAN = 10000
R_LEG_FAT = 4000
R_LEG_LEAN = 10000
TRUNK_FAT = 6000
TRUNK_LEAN = 14000
dfit3dBase <- data.frame(cbind(ageYr ,height_cm, Race , Gender ,
RARM_FAT, RARM_LEAN , LARM_FAT , LARM_LEAN ,
L_LEG_FAT , L_LEG_LEAN ,R_LEG_FAT, R_LEG_LEAN ,
TRUNK_FAT, TRUNK_LEAN ))
View(wmLms)
View(dfit3dBase)
dfit3dBase <- transform(dfit3dBase,
trunkFmi = (TRUNK_FAT/1000) / ((height_cm/100)^2),
leftArmFmi = (LARM_FAT/1000) / ((height_cm/100)^2),
leftLegFmi = (L_LEG_FAT/1000) / ((height_cm/100)^2),
rightLegFmi = (R_LEG_FAT/1000) / ((height_cm/100)^2),
rightArmFmi = (RARM_FAT/1000) / ((height_cm/100)^2),
trunkLmi = (TRUNK_LEAN/1000) / ((height_cm/100)^2),
leftArmLmi = (LARM_LEAN/1000) / ((height_cm/100)^2),
leftLegLmi = (L_LEG_LEAN/1000) / ((height_cm/100)^2),
rightLegLmi = (R_LEG_LEAN/1000) / ((height_cm/100)^2),
rightArmLmi = (RARM_LEAN/1000) / ((height_cm/100)^2)
)
View(dfit3dBase)
View(dfit3dBase)
TRUNK_LEAN = as.numeric(14000)
dfit3dBase <- data.frame(cbind(ageYr ,height_cm, Race , Gender ,
RARM_FAT, RARM_LEAN , LARM_FAT , LARM_LEAN ,
L_LEG_FAT , L_LEG_LEAN ,R_LEG_FAT, R_LEG_LEAN ,
TRUNK_FAT, TRUNK_LEAN ))
View(dfit3dBase)
dfit3dBase <- cbind(ageYr ,height_cm, Race , Gender ,
RARM_FAT, RARM_LEAN , LARM_FAT , LARM_LEAN ,
L_LEG_FAT , L_LEG_LEAN ,R_LEG_FAT, R_LEG_LEAN ,
TRUNK_FAT, TRUNK_LEAN )
View(dfit3dBase)
TRUNK_LEAN = as.numeric(14000)
dfit3dBase <- c(ageYr ,height_cm, Race , Gender ,
RARM_FAT, RARM_LEAN , LARM_FAT , LARM_LEAN ,
L_LEG_FAT , L_LEG_LEAN ,R_LEG_FAT, R_LEG_LEAN ,
TRUNK_FAT, TRUNK_LEAN )
dfit3dBase <- data.frame(c(ageYr ,height_cm, Race , Gender ,
RARM_FAT, RARM_LEAN , LARM_FAT , LARM_LEAN ,
L_LEG_FAT , L_LEG_LEAN ,R_LEG_FAT, R_LEG_LEAN ,
TRUNK_FAT, TRUNK_LEAN ))
View(dfit3dBase)
dfit3dBase <- data.frame(t(c(ageYr ,height_cm, Race , Gender ,
RARM_FAT, RARM_LEAN , LARM_FAT , LARM_LEAN ,
L_LEG_FAT , L_LEG_LEAN ,R_LEG_FAT, R_LEG_LEAN ,
TRUNK_FAT, TRUNK_LEAN )))
View(dfit3dBase)
dfit3dBase <- NULL
dfit3dBase <- transform(dfit3dBase,
trunkFmi = (TRUNK_FAT/1000) / ((height_cm/100)^2),
leftArmFmi = (LARM_FAT/1000) / ((height_cm/100)^2),
leftLegFmi = (L_LEG_FAT/1000) / ((height_cm/100)^2),
rightLegFmi = (R_LEG_FAT/1000) / ((height_cm/100)^2),
rightArmFmi = (RARM_FAT/1000) / ((height_cm/100)^2),
trunkLmi = (TRUNK_LEAN/1000) / ((height_cm/100)^2),
leftArmLmi = (LARM_LEAN/1000) / ((height_cm/100)^2),
leftLegLmi = (L_LEG_LEAN/1000) / ((height_cm/100)^2),
rightLegLmi = (R_LEG_LEAN/1000) / ((height_cm/100)^2),
rightArmLmi = (RARM_LEAN/1000) / ((height_cm/100)^2)
)
trunkFmi = (TRUNK_FAT/1000) / ((height_cm/100)^2),
leftArmFmi = (LARM_FAT/1000) / ((height_cm/100)^2),
leftLegFmi = (L_LEG_FAT/1000) / ((height_cm/100)^2),
rightLegFmi = (R_LEG_FAT/1000) / ((height_cm/100)^2),
rightArmFmi = (RARM_FAT/1000) / ((height_cm/100)^2),
trunkLmi = (TRUNK_LEAN/1000) / ((height_cm/100)^2),
leftArmLmi = (LARM_LEAN/1000) / ((height_cm/100)^2),
leftLegLmi = (L_LEG_LEAN/1000) / ((height_cm/100)^2),
rightLegLmi = (R_LEG_LEAN/1000) / ((height_cm/100)^2),
rightArmLmi = (RARM_LEAN/1000) / ((height_cm/100)^2)
trunkFmi = (TRUNK_FAT/1000) / ((height_cm/100)^2)
leftArmFmi = (LARM_FAT/1000) / ((height_cm/100)^2)
leftLegFmi = (L_LEG_FAT/1000) / ((height_cm/100)^2)
rightLegFmi = (R_LEG_FAT/1000) / ((height_cm/100)^2)
rightArmFmi = (RARM_FAT/1000) / ((height_cm/100)^2)
trunkLmi = (TRUNK_LEAN/1000) / ((height_cm/100)^2)
leftArmLmi = (LARM_LEAN/1000) / ((height_cm/100)^2)
leftLegLmi = (L_LEG_LEAN/1000) / ((height_cm/100)^2)
rightLegLmi = (R_LEG_LEAN/1000) / ((height_cm/100)^2)
rightArmLmi = (RARM_LEAN/1000) / ((height_cm/100)^2)
racePrefix = 'h'
genderPrefix = 'f'
if (race == 'Non-Hispanic Black'){
racePrefix = 'b'
}else if (race == 'Non-Hispanic White'){
racePrefix = 'w'
}else if (race == 'Hispanic'){
racePrefix = 'h'
}
if (gender == 'Male'){
genderPrefix = 'm'
}else if (gender == 'Female'){
genderPrefix = 'f'
}
frames <- c(sprintf("%s%sLms", racePrefix, genderPrefix))
df <- get(frames)
lmsChart <- assign(as.character(frames), df, envir= .GlobalEnv)
agerow = age - 7
lmsAge <- lmsChart[agerow ,]
#Converts all to data matrix (better for calculations)
lArmFmi = data.matrix(lmsAge[2])
mArmFmi = data.matrix(lmsAge[3])
sArmFmi = data.matrix(lmsAge[4])
lArmLmi = data.matrix(lmsAge[6])
mArmLmi = data.matrix(lmsAge[7])
sArmLmi = data.matrix(lmsAge[8])
lLegFmi = data.matrix(lmsAge[10])
mLegFmi = data.matrix(lmsAge[11])
sLegFmi = data.matrix(lmsAge[12])
lLegLmi = data.matrix(lmsAge[14])
mLegLmi = data.matrix(lmsAge[15])
sLegLmi = data.matrix(lmsAge[16])
lTrunkFmi = data.matrix(lmsAge[18])
mTrunkFmi = data.matrix(lmsAge[19])
sTrunkFmi = data.matrix(lmsAge[20])
lTrunkLmi = data.matrix(lmsAge[22])
mTrunkLmi = data.matrix(lmsAge[23])
sTrunkLmi = data.matrix(lmsAge[24])
#Select just a row
zLArmFmi= (((leftArmFmi/mArmFmi)^lArmFmi)-1)/(lArmFmi*sArmFmi)
zRArmFmi= (((rightArmFmi/mArmFmi)^lArmFmi)-1)/(lArmFmi*sArmFmi)
zLArmLmi= (((leftArmLmi/mArmLmi)^lArmLmi)-1)/(lArmLmi*sArmLmi)
zRArmLmi= (((rightArmLmi/mArmLmi)^lArmLmi)-1)/(lArmLmi*sArmLmi)
zLLegFmi= (((leftLegFmi/mLegFmi)^lLegFmi)-1)/(lLegFmi*sLegFmi)
zRLegFmi= (((rightLegFmi/mLegFmi)^lLegFmi)-1)/(lLegFmi*sLegFmi)
zLLegLmi= (((leftLegLmi/mLegLmi)^lLegLmi)-1)/(lLegLmi*sLegLmi)
zRLegLmi= (((rightLegLmi/mLegLmi)^lLegLmi)-1)/(lLegLmi*sLegLmi)
zTrunkFmi= (((trunkFmi/mTrunkFmi)^lTrunkFmi)-1)/(lTrunkFmi*sTrunkFmi)
zTrunkLmi= (((trunkLmi/mTrunkLmi)^lTrunkLmi)-1)/(lTrunkLmi*sTrunkLmi)
age = 20
racePrefix = 'h'
genderPrefix = 'f'
agerow = age - 7
lmsAge <- lmsChart[agerow ,]
lArmFmi = data.matrix(lmsAge[2])
mArmFmi = data.matrix(lmsAge[3])
sArmFmi = data.matrix(lmsAge[4])
lArmLmi = data.matrix(lmsAge[6])
mArmLmi = data.matrix(lmsAge[7])
sArmLmi = data.matrix(lmsAge[8])
lLegFmi = data.matrix(lmsAge[10])
mLegFmi = data.matrix(lmsAge[11])
sLegFmi = data.matrix(lmsAge[12])
lLegLmi = data.matrix(lmsAge[14])
mLegLmi = data.matrix(lmsAge[15])
sLegLmi = data.matrix(lmsAge[16])
lTrunkFmi = data.matrix(lmsAge[18])
mTrunkFmi = data.matrix(lmsAge[19])
sTrunkFmi = data.matrix(lmsAge[20])
lTrunkLmi = data.matrix(lmsAge[22])
mTrunkLmi = data.matrix(lmsAge[23])
sTrunkLmi = data.matrix(lmsAge[24])
#Select just a row
zLArmFmi= (((leftArmFmi/mArmFmi)^lArmFmi)-1)/(lArmFmi*sArmFmi)
zRArmFmi= (((rightArmFmi/mArmFmi)^lArmFmi)-1)/(lArmFmi*sArmFmi)
zLArmLmi= (((leftArmLmi/mArmLmi)^lArmLmi)-1)/(lArmLmi*sArmLmi)
zRArmLmi= (((rightArmLmi/mArmLmi)^lArmLmi)-1)/(lArmLmi*sArmLmi)
zLLegFmi= (((leftLegFmi/mLegFmi)^lLegFmi)-1)/(lLegFmi*sLegFmi)
zRLegFmi= (((rightLegFmi/mLegFmi)^lLegFmi)-1)/(lLegFmi*sLegFmi)
zLLegLmi= (((leftLegLmi/mLegLmi)^lLegLmi)-1)/(lLegLmi*sLegLmi)
zRLegLmi= (((rightLegLmi/mLegLmi)^lLegLmi)-1)/(lLegLmi*sLegLmi)
zTrunkFmi= (((trunkFmi/mTrunkFmi)^lTrunkFmi)-1)/(lTrunkFmi*sTrunkFmi)
zTrunkLmi= (((trunkLmi/mTrunkLmi)^lTrunkLmi)-1)/(lTrunkLmi*sTrunkLmi)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
